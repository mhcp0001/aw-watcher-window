name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: test on ${{ matrix.os }} (py-${{ matrix.python_version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macOS-12]
        python_version: [3.9]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install Poetry
      run: pip install poetry==1.3.2
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create true
        poetry lock
        poetry install --no-interaction --no-ansi --with dev
    - name: Install PyInstaller
      run: poetry run pip install pyinstaller
    - name: Build
      run: poetry run make build
    - name: Run tests
      run: poetry run make test
    - name: Package
      run: poetry run make package
    - name: Test package
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          dist/aw-watcher-window/aw-watcher-window.exe --help
        else
          dist/aw-watcher-window/aw-watcher-window --help
        fi
    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: aw-watcher-window-${{ runner.os }}-py${{ matrix.python_version }}
        path: dist/aw-watcher-window

  typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Poetry
      run: pip install poetry==1.3.2
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create true
        poetry lock
        poetry install --no-interaction --no-ansi --with dev
    - name: Typecheck
      run: poetry run make typecheck

  build-windows-exe:
    name: Build Windows Executable
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Poetry
      run: pip install poetry==1.3.2
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create true
        poetry lock
        poetry install --no-interaction --no-ansi --with dev
    - name: Install PyInstaller
      run: poetry run pip install pyinstaller
    - name: Run tests
      run: poetry run make test
    - name: Build executable with PyInstaller
      run: poetry run pyinstaller aw-watcher-window.spec
    - name: Upload Windows Executable
      uses: actions/upload-artifact@v4
      with:
        name: aw-watcher-virtualdesktop-exe
        path: dist/aw-watcher-virtualdesktop/aw-watcher-virtualdesktop.exe